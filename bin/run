#!/usr/bin/env node
/* eslint-disable no-unused-vars */
/* eslint-disable node/no-extraneous-require */
/* eslint-disable import/no-extraneous-dependencies */
/* eslint-disable import/no-dynamic-require */
/* eslint-disable unicorn/prefer-module */

const cmdObj = require('@oclif/core');
const chalk = require('chalk');
const path = require('path');
const fs = require('fs-extra');
const os = require('os');

const pkg = require(path.join(__dirname, '../package.json'));

const updateNotifier = require('update-notifier');

const util = require(path.join(__dirname, '../src/util.js'));

updateNotifier({ pkg }).notify();

cmdObj.settings.debug = true;
console.log(
    chalk.blueBright(`
    __  ___  ______ ______  ___      ____   ___     _____   ______  ______  __     ___
   /  |/  / / ____ /_  __/ /   |    / __ ) /   |   / ___/  / ____/ / ____  / /    /  /
  / /|_/ / / __/    / /   / /| |   / __ / / /| |   |__ |  / __/   / /     / /    /  /  
 / /  / / / /___   / /   / ___ |  / /_// / ___ |  ___/ / / /___  / /___  / /__  /  /   
/_/  /_/ /_____/  /_/   /_/  |_| /____/ /_/  |_/ |____/ /_____/ /_____/ /____/ /__/   
`)
);

global.METABASE_PATH = path.resolve(__dirname, '../');
const configFilePath = util.initCredConfig();
global.credConfig = null;
if (fs.existsSync(configFilePath)) {
    global.credConfig = JSON.parse(fs.readFileSync(configFilePath));
}

cmdObj.run().then(require('@oclif/core/flush')).catch(require('@oclif/errors/handle'));
